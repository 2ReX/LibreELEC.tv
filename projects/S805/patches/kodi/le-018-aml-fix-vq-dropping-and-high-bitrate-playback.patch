diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
index 7236444..bf6baab 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/AMLCodec.cpp
@@ -1810,6 +1810,9 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
       m_1st_pts = am_private->am_pkt.lastpts;
   }
 
+  // we must return VC_BUFFER or VC_PICTURE,
+  int rtn = 0;
+
   // if we have still frames, demux size will be small
   // and we need to pre-buffer more.
   double target_timesize = 1.0;
@@ -1818,23 +1821,20 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
 
   // keep hw buffered demux above 1 second
   if (GetTimeSize() < target_timesize && m_speed == DVD_PLAYSPEED_NORMAL)
-    return VC_BUFFER;
+    rtn |= VC_BUFFER;
 
-  // wait until we get a new frame or 25ms,
-  if (m_old_pictcnt == m_cur_pictcnt)
+  // wait until we get a new frame or 100ms
+  else if (m_old_pictcnt == m_cur_pictcnt)
     m_ready_event.WaitMSec(25);
 
-  // we must return VC_BUFFER or VC_PICTURE,
-  // default to VC_BUFFER.
-  int rtn = VC_BUFFER;
   if (m_old_pictcnt != m_cur_pictcnt)
   {
     m_old_pictcnt++;
-    rtn = VC_PICTURE;
+    rtn |= VC_PICTURE;
     // we got a new pict, try and keep hw buffered demux above 2 seconds.
     // this, combined with the above 1 second check, keeps hw buffered demux between 1 and 2 seconds.
     // we also check to make sure we keep from filling hw buffer.
-    if (GetTimeSize() < 2.0 && GetDataSize() < m_vbufsize/3)
+    if (GetTimeSize() < 2.0)
       rtn |= VC_BUFFER;
   }
 /*
